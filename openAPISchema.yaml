openapi: 3.0.3
info:
    title: My API Documentation
    version: 1.0.0
paths:
    /api/v1/customer/createNewCustomer:
        post:
            summary: Create a new customer
            operationId: createNewCustomer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewCustomerInput'
                        example:
                            customerName: John Doe
                            customerAddress: 123 Main Street
                            customerMobileNum: 1234567890
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Customer'
                            example:
                                customerId: 1
                                customerName: John Doe
                                customerAddress: 123 Main Street
                                customerMobileNum: 1234567890
    /api/v1/customer/updateCustomer/{customerId}:
        put:
            summary: Update an existing customer
            operationId: updateCustomer
            parameters:
                - name: customerId
                  in: path
                  description: ID of the customer to update
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCustomerInput'
                        example:
                            customerName: John Doe
                            customerAddress: 456 Elm Street
                            customerMobileNum: 9876543210
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Customer'
                            example:
                                customerId: 1
                                customerName: John Doe
                                customerAddress: 456 Elm Street
                                customerMobileNum: 9876543210
    /api/v1/customer/getCustomerByName:
        get:
            summary: Get customer(s) by name
            operationId: getCustomerByName
            parameters:
                - name: customerName
                  in: query
                  description: Name of the customer to search for
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Customer'
                            example:
                                - customerId: 1
                                  customerName: John Doe
                                  customerAddress: 123 Main Street
                                  customerMobileNum: 1234567890
                                - customerId: 2
                                  customerName: Jane Smith
                                  customerAddress: 456 Elm Street
                                  customerMobileNum: 9876543210
    /api/v1/service/createNewService:
        post:
            summary: Create a new service
            operationId: createNewService
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewServiceInput'
                        example:
                            customerId: 1
                            serviceDate: '2023-06-21'
                            isServiceCompleted: false
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Service'
                            example:
                                serviceId: 1
                                customerId: 1
                                serviceDate: '2023-06-21'
                                isServiceCompleted: false
    /api/v1/service/updateService/{serviceId}:
        put:
            summary: Update an existing service
            operationId: updateService
            parameters:
                - name: serviceId
                  in: path
                  description: ID of the service to update
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateServiceInput'
                        example:
                            customerId: 1
                            serviceDate: '2023-06-21'
                            isServiceCompleted: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Service'
                            example:
                                serviceId: 1
                                customerId: 1
                                serviceDate: '2023-06-21'
                                isServiceCompleted: true
    /api/v1/service/getServiceByServiceId/{serviceId}:
        get:
            summary: Get a service by ID
            operationId: getServiceByServiceId
            parameters:
                - name: serviceId
                  in: path
                  description: ID of the service to retrieve
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Service'
                            example:
                                serviceId: 1
                                customerId: 1
                                serviceDate: '2023-06-21'
                                isServiceCompleted: true
    /api/v1/service/getServiceByCustomerId/{customerId}:
        get:
            summary: Get services by customer ID
            operationId: getServiceByCustomerId
            parameters:
                - name: customerId
                  in: path
                  description: ID of the customer
                  required: true
                  schema:
                      type: integer
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Service'
                            example:
                                - serviceId: 1
                                  customerId: 1
                                  serviceDate: '2023-06-21'
                                  isServiceCompleted: true
                                - serviceId: 2
                                  customerId: 1
                                  serviceDate: '2023-06-22'
                                  isServiceCompleted: false
    /api/v1/service/getPendingServices:
        get:
            summary: Get pending services
            operationId: getPendingServices
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Service'
                            example:
                                - serviceId: 1
                                  customerId: 1
                                  serviceDate: '2023-06-21'
                                  isServiceCompleted: false
                                - serviceId: 2
                                  customerId: 2
                                  serviceDate: '2023-06-22'
                                  isServiceCompleted: false
components:
    schemas:
        Customer:
            type: object
            properties:
                customerId:
                    type: integer
                customerName:
                    type: string
                customerAddress:
                    type: string
                customerMobileNum:
                    type: string
        NewCustomerInput:
            type: object
            properties:
                customerName:
                    type: string
                customerAddress:
                    type: string
                customerMobileNum:
                    type: string
        UpdateCustomerInput:
            type: object
            properties:
                customerName:
                    type: string
                customerAddress:
                    type: string
        Service:
            type: object
            properties:
                serviceId:
                    type: integer
                customerId:
                    type: integer
                serviceDate:
                    type: string
                    format: date
                isServiceCompleted:
                    type: boolean
        NewServiceInput:
            type: object
            properties:
                customerId:
                    type: integer
                serviceDate:
                    type: string
                    format: date
                isServiceCompleted:
                    type: boolean
        UpdateServiceInput:
            type: object
            properties:
                customerId:
                    type: integer
                serviceDate:
                    type: string
                    format: date
                isServiceCompleted:
                    type: boolean
